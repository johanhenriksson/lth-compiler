aspect Functions 
{
    // print int to std in
    class PrintFunction extends Function {
        public PrintFunction() {
            super(
                new IdDecl(new TypeId("int"), "print"), 
                new List<Argument>(
                    new Argument(new IdDecl(new TypeId("int"), "value"))
                ), 
                new Block()
            );
        }

        @Override
        public int eval(ActivationRecord rec) {
            System.out.println(rec.get("value"));
            return 0;
        }
    }

    // read int from std in
    class ReadFunction extends Function {
        public ReadFunction() {
            super(
                new IdDecl(new TypeId("int"), "read"), 
                new List<Argument>(), 
                new Block()
            );
        }

        @Override
        public int eval(ActivationRecord rec) {
            return 0;
        }
    }

    syn nta List<Function> Program.predefinedFunctions() {
        List<Function> functions = new List<Function>();

        /* void print(int value) */
        functions.add(new PrintFunction());

        /* int read() */
        functions.add(new Function(
            new IdDecl(new TypeId("int"), "read"), 
            new List<Argument>(), 
            new Block())
        );

        return functions;
    }

    inh boolean IdDecl.isFunction();
    inh Function IdDecl.function();

    syn boolean IdUse.isFunction() = decl().isFunction();
    syn Function IdUse.function() = decl().function();

    eq Function.getName().isFunction() = true;
    eq Function.getName().function() = this;
    eq Argument.getName().function() = unknownFunc();
    eq Argument.getName().isFunction() = false;
    eq DeclareStmt.getName().function() = unknownFunc();
    eq DeclareStmt.getName().isFunction() = false;

    eq Program.getChild().isFunction() = false;
    eq Program.getChild().function() = unknownFunc();

    syn boolean UnknownDecl.isFunction() = false;
    syn Function UnknownDecl.function() = unknownFunc();

    syn boolean UnknownFunc.isFunction() = true;
    syn Function UnknownFunc.function() = unknownFunc();

    /* Generates a function signature string from a function definition node */
    syn String Function.signature() {
        StringBuilder sb = new StringBuilder();
        sb.append(getName().getID());
        sb.append("(");
        for(int i = 0; i < getNumArgument(); i++) {
            sb.append(getArgument(i).getName().type());
            if (i < getNumArgument()-1)
                sb.append(",");
        }
        sb.append(")");
        return sb.toString();
    }

    /* Generates a call signature string from a function expression node */
    syn String FuncExpr.signature() {
        StringBuilder sb = new StringBuilder();
        sb.append("(");
        for(int i = 0; i < getNumArgument(); i++) {
            sb.append(getArgument(i).type());
            if (i < getNumArgument()-1)
                sb.append(",");
        }
        sb.append(")");
        return sb.toString();
    }
}
