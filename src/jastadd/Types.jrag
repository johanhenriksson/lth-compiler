aspect Types 
{
    syn Type Program.findType(String name) {
        // built in types
        switch(name) {
            case "int": return new IntType();
            case "bool": return new BoolType();
            case "void": return new VoidType();
            case "float": return new FloatType();
        }

        // look for structs
        Struct struct = findStruct(name);
        if (!struct.isUnknown())
            return new StructType(struct.getName().getID());

        return new UnknownType();
    }

    syn Struct Program.findStruct(String name) {
        for(int i = 0; i < getNumUnit(); i++) {
            Struct struct = getUnit(i).findStruct(name);
            if (!struct.isUnknown())
                return struct;
        }
        return unknownStruct();
    }

    syn Struct Unit.findStruct(String name) = unknownStruct();
    eq Struct.findStruct(String name) {
        if (getName().getID().equals(name))
            return this;
        return unknownStruct();
    }

    syn boolean Type.isUnknownType() = false;
    eq UnknownType.isUnknownType() = true;

    syn Type TypeId.type() = lookupType(getID());

    inh Type TypeId.lookupType(String typeId);
    inh Type Struct.lookupType(String typeId);

    eq Program.getChild().lookupType(String typeId) {
        return findType(typeId);
    }
    
    eq UnknownDecl.getType().lookupType(String typeId) {
        return new UnknownType();
    }

    syn boolean Type.equals(Object other) {
        if (!(other instanceof Type))
            return false;
        return toString().equals(((Type)other).toString());
    }

    syn boolean Type.isStruct() = false;
    eq StructType.isStruct() = true;

    syn String IntType.toString() = "int";
    syn String BoolType.toString() = "bool";
    syn String VoidType.toString() = "void";
    syn String FloatType.toString() = "float";
    syn String UnknownType.toString() = "<unknown>";

    syn String StructType.toString() = "struct " + getName();
}
